version: 2

jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/gax-kotlin
    steps:
      - checkout
      - restore_cache: &kgax-key
          key: kgax-{{ checksum "build.gradle" }}-{{ checksum "kgax-core/build.gradle" }}-{{ checksum "kgax-grpc-base/build.gradle" }}-{{ checksum "kgax-grpc/build.gradle" }}-{{ checksum "kgax-grpc-android/build.gradle" }}
      - run: 
          name: Download Dependencies
          command: ./gradlew dependencies
      - save_cache:
          <<: *kgax-key
          paths:
            - ~/.gradle
      - run:
           name: Build and run checks
           command: ./gradlew build
      - run: 
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit        
      - run: 
          name: Codecov
          command: bash <(curl -s https://codecov.io/bash)
          when: always

  build_android_examples:
    working_directory: ~/gax-kotlin/examples-android
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout:
          path: ~/gax-kotlin
      - restore_cache: &android-example-key
          key: example-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          <<: *android-example-key
          paths:
            - ~/.gradle
      - run:
          name: Create placeholder key
          command: touch app/src/main/res/raw/sa.json
      - run:
          name: Run checks
          command: ./gradlew build
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

  # -------------------------------------------------------------------------------
  # Tests - Integration (Cloud)
  # -------------------------------------------------------------------------------

  test_cloud_examples:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/gax-kotlin
    steps:
      - checkout
      - restore_cache:
          <<: *kgax-key
      - run:
          name: Download dependencies
          command: ./gradlew dependencies
      - run:
          name: Run all examples
          command: |
            echo $GCLOUD_SERVICE_KEY > _key.json
            export CREDENTIALS=_key.json
            export PROJECT=$GCLOUD_PROJECT_ID
            ./gradlew examples:run --args language
            ./gradlew examples:run --args speech
      - run:
          command: rm _key.json
          when: always

# -------------------------------------------------------------------------------
# CI Workflow
# -------------------------------------------------------------------------------

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - build_android_examples
      - test_cloud_examples:
          requires:
            - build
#          filters: &master-filter
#            branches:
#              only: master
#            tags:
#              only: /.*/
